You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.


Example 1:

Input: 2
Output:  2
Explanation:  There are two ways to climb to the top.

1. 1 step + 1 step
2. 2 steps
Example 2:

Input: 3
Output:  3
Explanation:  There are three ways to climb to the top.

1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step


Version1

var climbStairs = function(n) {
    var result = 0;
    if(n === 0) return 0;
    if(n === 1) return 1;
    if(n === 2) return 2;
    var prepre = 1;
    var pre = 2;
    for(var i = 2; i < n; i++){
        result = prepre + pre;
        prepre = pre;
        pre = result;
    }
    return result;
};//斐波那契数列，每一项都是前两项之和，也就是第n级台阶的路径是n-1和n-2之和。
________________________________________________________________________________________________________________________________________

Version2

var climbStairs = function(n) {
    var array = [0, 1, 2];
    for(var i = 3; i <= n; i++){
        array[i] = array[i - 1] + array[i - 2];
    }
    return array[n];
};//和第一种方法一样，但更简洁

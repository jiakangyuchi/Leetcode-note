Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.


Version 1

var minDepth = function(root) {
    if(!root) return 0;
    var result;
    function minHeight(root, depth){
        if(!root.left && !root.right){
            result = Math.min(result || depth, depth)
        }
        if(root.left) minHeight(root.left, depth + 1);
        if(root.right) minHeight(root.right, depth + 1);
    }
    minHeight(root, 1);
    return result;
};//DFS

___________________________________________________________________________________________________________________________________________
 Version2
 
 var minDepth = function(root) {
    if(!root) return 0;
    if(!root.left) return 1 + minDepth(root.right);
    if(!root.right) return 1 + minDepth(root.left);
    return Math.min(1 + minDepth(root.left), 1 + minDepth(root.right));
};//BFS

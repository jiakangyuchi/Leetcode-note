Given a digit string, return all possible letter combinations that the number could represent.

A mapping of digit to letters (just like on the telephone buttons) is given below.

Input:Digit string "23"
Output: ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
Note:
Although the above answer is in lexicographical order, your answer could be in any order you want.


var letterCombinations = function(digits) {
    if(digits.length === 0) return [];
    var arr = ["", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"];
    var step = [];
    if(digits[0] > 1) step = arr[digits[0]].split("");
    var i = 1;
    var res = [];
    while(digits.length > i){
        var str = arr[digits[i]];
        res = [];
        for(let v in step){
            for(let j = 0; j < str.length; j ++){
                res.push(step[v] + str[j]);
            }
        }
        step = res;
        i ++;
    }
    return step;
};

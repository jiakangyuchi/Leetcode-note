Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]



var pathSum = function(root, sum) {
    if(!root) return [];
    var result = [];
    function path(root, str, amount){
        amount += root.val;
        if(!root.left && !root.right){
            str += root.val;            
            if(amount === sum) result.push(str.split(" ").map(Number));
        }
        if(root.left) path(root.left, str + root.val + " ", amount);
        if(root.right) path(root.right, str + root.val + " ", amount);
    }
    path(root, "", 0);
    return result;
};

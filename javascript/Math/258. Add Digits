Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.

For example:

Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.

Follow up:
Could you do it without any loop/recursion in O(1) runtime?

/**
 * @param {number} num
 * @return {number}
 */
var addDigits = function(num) {
    var result = num % 9;
    return (num == 0 || result != 0) ? result: 9;
};                                                                    //Math

/**
 * @param {number} num
 * @return {number}
 */
var addDigits = function(num) {
    var str = num + "";
    var result = 0;
    while(str.length>1){
        for(let i = 0; i < str.length; i++){
            result += str[i];
        }
    }
    if(str.length = 1){
        result = num;
    }
    return result;
};                                                                    //loop


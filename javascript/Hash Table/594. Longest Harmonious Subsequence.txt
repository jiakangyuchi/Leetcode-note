We define a harmonious array is an array where the difference between its maximum value and its minimum value is exactly 1.

Now, given an integer array, you need to find the length of its longest harmonious subsequence among all its possible subsequences.

Example 1:
Input: [1,3,2,2,5,2,3,7]
Output: 5
Explanation: The longest harmonious subsequence is [3,2,2,2,3].
Note: The length of the input array will not exceed 20,000.




var findLHS = function(nums) {
    var map = {};
    var array = [];
    var result = 0;
    var left = 0;
    var right = 0;
    for(let i = 0; i < nums.length; i++){
        if(map[nums[i]] === undefined){
            array.push(nums[i]);
            map[nums[i]] = 1;
        }
        else{
            map[nums[i]] += 1;
        }
    }
    for(let i = 0; i < array.length; i++){
        left += map[array[i]] + map[array[i] - 1]||0;
        right += map[array[i]] + map[array[i] + 1]||0;
        result = Math.max(result, left, right);
        left = 0;
        right = 0;
    }
    return result;
};//用hashmap把每个数字和出现的次数存起来，把数字放到array中，遍历array，比如遍历到了3，left = map[2]||0 + map[3],right = map[4]||0 + map[3]

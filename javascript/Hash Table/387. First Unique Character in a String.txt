Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.



Version1

var firstUniqChar = function(s) {
    var map = new Map();
    var current = s.length;
    for(let i = 0; i < s.length; i++){
        if(map.get(s[i]) === undefined){
            map.set(s[i], i);
        }
        else{
            map.set(s[i], s.length);
        }
    }
    map.forEach(function(x){
        current =  Math.min(current, x);
    })
    if(current === s.length) return -1;
    else return current;
};//hashmap，时间复杂度O(n)，在map中存储字母的位置，如果已经出现过一次，则其value设为s.length，最后如果最小的是s.length则返回-1。

——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

Version2

var firstUniqChar = function(s) {
    for(var i = 0; i < s.length; i++){
        if(s.indexOf(s[i]) === s.lastIndexOf(s[i])) return i;
    }
    return -1;
};//时间复杂度O(n^2)

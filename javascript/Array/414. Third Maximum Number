Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).

Example 1:
Input: [3, 2, 1]

Output: 1

Explanation: The third maximum is 1.
Example 2:
Input: [1, 2]

Output: 2

Explanation: The third maximum does not exist, so the maximum (2) is returned instead.
Example 3:
Input: [2, 2, 3, 1]

Output: 1

Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.



//将数组转换成set再转回array以去重，然后降序排列。
var thirdMax = function(nums) {
    nums = Array.from(new Set(nums));
    if(nums.length < 3){
        return Math.max(...nums);
    }
    else if(nums.length === 3){
        return Math.min(...nums);
    }
    else{
        nums.sort(function(x, y){
            return y - x;
        })
        return nums[2];
    }
};

Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Example 1:

Input: [1,3,5,6], 5
Output: 2
Example 2:

Input: [1,3,5,6], 2
Output: 1
Example 3:

Input: [1,3,5,6], 7
Output: 4
Example 1:

Input: [1,3,5,6], 0
Output: 0

//默认升序排列，不知道为什么
Version 1

var searchInsert = function(nums, target) {
    if(nums[nums.length - 1] < target){
        return nums.length;
    }
    for(var i = 0; i < nums.length; i++){
        if(nums[i] >= target){
            return i;
        }
    }
};//顺序查找，时间复杂度O(n)

__________________________________________________________________________________________________________________________________________
Version 2

var searchInsert = function(nums, target) {
    var left = 0;
    var right = nums.length - 1;
    while(left <= right){
        var mid = Math.floor((right + left)/2);
        if(nums[mid] === target){
            return mid;
        }
        if(nums[mid] > target){
            right = mid - 1;
        }
        if(nums[mid] < target){
            left = mid + 1;
        }
    }
    return left;
};//二分查找，即折半查找，时间复杂度O(logn)

Given an array with n integers, your task is to check if it could become non-decreasing by modifying at most 1 element.

We define an array is non-decreasing if array[i] <= array[i + 1] holds for every i (1 <= i < n).

Example 1:
Input: [4,2,3]
Output: True
Explanation: You could modify the first 
4
 to 
1
 to get a non-decreasing array.
Example 2:
Input: [4,2,1]
Output: False
Explanation: You can't get a non-decreasing array by modify at most one element.
Note: The n belongs to [1, 10,000].


//找到有问题的一对数，进行判断，两种策略，改变nums[i]或nums[i+1];
var checkPossibility = function(nums) {
    var count = 0;
    if(nums.length < 3){
        return true;
    }
    for(let i = 0; i < nums.length; i++){
        if(nums[i + 1] < nums[i]){
            count++;
            if(i === 0){
                nums[i] = nums[i + 1];
            }
            else if(nums[i - 1] <= nums[i + 1]){
                nums[i] = nums[i - 1];
            }
            else{
                nums[i + 1] = nums[i];
            }
        }
        if(count > 1){
            return false;
        }
    }
    return true;
};
